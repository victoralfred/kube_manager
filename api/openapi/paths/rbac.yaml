roles:
  get:
    tags:
      - rbac
    summary: List roles
    description: Retrieve a list of roles for the tenant
    operationId: listRoles
    parameters:
      - name: X-Tenant-ID
        in: header
        required: true
        schema:
          type: string
          format: uuid
        description: Tenant identifier
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
    responses:
      '200':
        description: List of roles
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../schemas/common.yaml#/PaginatedResponse'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../schemas/rbac.yaml#/Role'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
  post:
    tags:
      - rbac
    summary: Create role
    description: Create a new role
    operationId: createRole
    parameters:
      - name: X-Tenant-ID
        in: header
        required: true
        schema:
          type: string
          format: uuid
        description: Tenant identifier
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/rbac.yaml#/CreateRoleRequest'
    responses:
      '201':
        description: Role created successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/rbac.yaml#/Role'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '409':
        description: Role already exists
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'

roles_id:
  get:
    tags:
      - rbac
    summary: Get role by ID
    description: Retrieve a role by its unique identifier
    operationId: getRole
    parameters:
      - name: X-Tenant-ID
        in: header
        required: true
        schema:
          type: string
          format: uuid
        description: Tenant identifier
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Role ID
    responses:
      '200':
        description: Role details
        content:
          application/json:
            schema:
              $ref: '../schemas/rbac.yaml#/Role'
      '404':
        description: Role not found
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
  put:
    tags:
      - rbac
    summary: Update role
    description: Update role information
    operationId: updateRole
    parameters:
      - name: X-Tenant-ID
        in: header
        required: true
        schema:
          type: string
          format: uuid
        description: Tenant identifier
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Role ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/rbac.yaml#/UpdateRoleRequest'
    responses:
      '200':
        description: Role updated successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/rbac.yaml#/Role'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '404':
        description: Role not found
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
  delete:
    tags:
      - rbac
    summary: Delete role
    description: Delete a role
    operationId: deleteRole
    parameters:
      - name: X-Tenant-ID
        in: header
        required: true
        schema:
          type: string
          format: uuid
        description: Tenant identifier
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Role ID
    responses:
      '204':
        description: Role deleted successfully
      '404':
        description: Role not found
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'

permissions:
  get:
    tags:
      - rbac
    summary: List permissions
    description: Retrieve all available permissions
    operationId: listPermissions
    parameters:
      - name: resource
        in: query
        schema:
          type: string
        description: Filter by resource type
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
    responses:
      '200':
        description: List of permissions
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../schemas/common.yaml#/PaginatedResponse'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../schemas/rbac.yaml#/Permission'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
  post:
    tags:
      - rbac
    summary: Create permission
    description: Create a new permission
    operationId: createPermission
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/rbac.yaml#/CreatePermissionRequest'
    responses:
      '201':
        description: Permission created successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/rbac.yaml#/Permission'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '409':
        description: Permission already exists
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'

permissions_id:
  get:
    tags:
      - rbac
    summary: Get permission by ID
    description: Retrieve a permission by its unique identifier
    operationId: getPermission
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Permission ID
    responses:
      '200':
        description: Permission details
        content:
          application/json:
            schema:
              $ref: '../schemas/rbac.yaml#/Permission'
      '404':
        description: Permission not found
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
  delete:
    tags:
      - rbac
    summary: Delete permission
    description: Delete a permission
    operationId: deletePermission
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Permission ID
    responses:
      '204':
        description: Permission deleted successfully
      '404':
        description: Permission not found
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'

policies:
  get:
    tags:
      - rbac
    summary: List policies
    description: Retrieve a list of policies for the tenant
    operationId: listPolicies
    parameters:
      - name: X-Tenant-ID
        in: header
        required: true
        schema:
          type: string
          format: uuid
        description: Tenant identifier
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
    responses:
      '200':
        description: List of policies
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../schemas/common.yaml#/PaginatedResponse'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../schemas/rbac.yaml#/Policy'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/Error'
